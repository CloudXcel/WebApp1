{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\nimport { jsx, Box, Heading, Text } from 'theme-ui';\n\nconst SectionHeading = (_ref) => {\n  let {\n    title,\n    description\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"title\", \"description\"]);\n\n  return jsx(Box, _objectSpread({\n    sx: styles.heading\n  }, props), jsx(Heading, {\n    sx: styles.title\n  }, title), jsx(Text, {\n    as: \"p\",\n    sx: styles.description\n  }, description));\n};\n\nexport default SectionHeading;\nconst styles = {\n  heading: {\n    textAlign: 'center',\n    maxWidth: 660,\n    margin: ['0 auto 60px']\n  },\n  title: {\n    fontFamily: 'heading',\n    fontWeight: 700,\n    fontSize: [5, null, null, 26, null, 30, 9],\n    lineHeight: [1.33, 1.33, 1.48],\n    letterSpacing: ['-0.5px', null, null, null, null, null, '-1px'],\n    img: {\n      ml: ['15px'],\n      position: 'relative',\n      top: '8px'\n    }\n  },\n  description: {\n    color: 'heading',\n    fontSize: [1, null, null, 2],\n    lineHeight: [1.58, 1.58, 1.58, 2.2],\n    maxWidth: ['none', 'none', 'none', 'none', 490],\n    margin: '15px auto 0'\n  }\n};","map":null,"metadata":{},"sourceType":"module"}