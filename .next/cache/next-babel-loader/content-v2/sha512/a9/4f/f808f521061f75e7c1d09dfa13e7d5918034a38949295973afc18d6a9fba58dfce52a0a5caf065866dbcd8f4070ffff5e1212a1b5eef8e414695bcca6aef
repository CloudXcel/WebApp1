{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\nimport NextLink from 'next/link';\nimport { jsx, Link as A } from 'theme-ui';\nimport { Link as MenuLink } from 'react-scroll';\nimport { HiOutlineChevronRight } from 'react-icons/hi';\nexport function NavLink(_ref) {\n  let {\n    path,\n    label,\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"path\", \"label\", \"children\"]);\n\n  return jsx(MenuLink, _objectSpread({\n    to: path,\n    spy: true,\n    offset: -70,\n    smooth: true,\n    duration: 500,\n    className: \"nav-item\",\n    activeClass: \"active\"\n  }, rest), label);\n}\nexport function Link(_ref2) {\n  let {\n    path,\n    label,\n    children\n  } = _ref2,\n      rest = _objectWithoutProperties(_ref2, [\"path\", \"label\", \"children\"]);\n\n  return jsx(NextLink, {\n    href: path\n  }, jsx(A, _objectSpread({}, rest), children ? children : label));\n}\nexport function LearnMore(_ref3) {\n  let {\n    path,\n    label,\n    children\n  } = _ref3,\n      rest = _objectWithoutProperties(_ref3, [\"path\", \"label\", \"children\"]);\n\n  return jsx(NextLink, {\n    href: path\n  }, jsx(A, _objectSpread({\n    sx: styles.learnMore\n  }, rest), label !== null && label !== void 0 ? label : 'Learn More', \" \", jsx(HiOutlineChevronRight, null)));\n}\nconst styles = {\n  learnMore: {\n    color: 'link',\n    cursor: 'pointer',\n    fontSize: [1, 1, 1, 2],\n    fontWeight: 500,\n    display: 'inline-flex',\n    alignItems: 'center',\n    svg: {\n      transition: 'margin-left 0.3s ease-in-out 0s',\n      ml: '3px'\n    },\n    ':hover': {\n      svg: {\n        ml: '5px'\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}